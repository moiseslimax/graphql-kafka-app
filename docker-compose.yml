services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka

  user-service:
    build:
      context: ./user-service
    volumes:
      - ./user-service:/app
      - user_node_modules:/app/node_modules
    working_dir: /app
    depends_on:
      - kafka
    ports:
      - '3001:3001'
    environment:
      - KAFKA_BROKER=kafka:9092

  wallet-service:
    build:
      context: ./wallet-service
    volumes:
      - ./wallet-service:/app
      - wallet_node_modules:/app/node_modules
    working_dir: /app
    depends_on:
      - kafka
    ports:
      - '3002:3002'
    environment:
      - KAFKA_BROKER=kafka:9092

  graphql-gateway:
    build:
      context: ./graphql-gateway
    volumes:
      - ./graphql-gateway:/app
      - gateway_node_modules:/app/node_modules
    working_dir: /app
    depends_on:
      - user-service
      - wallet-service
    ports:
      - '3000:3000'

volumes:
  kafka_data:
  user_node_modules:
  wallet_node_modules:
  gateway_node_modules: